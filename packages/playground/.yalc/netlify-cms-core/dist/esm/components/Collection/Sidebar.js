"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactImmutableProptypes = _interopRequireDefault(require("react-immutable-proptypes"));

var _core = require("@emotion/core");

var _reactPolyglot = require("react-polyglot");

var _reactRouterDom = require("react-router-dom");

var _netlifyCmsUiDefault = require("netlify-cms-ui-default");

var _collections = require("../../actions/collections");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

const styles = {
  sidebarNavLinkActive: /*#__PURE__*/(0, _core.css)("color:", _netlifyCmsUiDefault.colors.active, ";background-color:", _netlifyCmsUiDefault.colors.activeBackground, ";border-left-color:#4863c6;;label:sidebarNavLinkActive;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFXMkIiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQ29sbGVjdGlvbi9TaWRlYmFyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgSW1tdXRhYmxlUHJvcFR5cGVzIGZyb20gJ3JlYWN0LWltbXV0YWJsZS1wcm9wdHlwZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyB0cmFuc2xhdGUgfSBmcm9tICdyZWFjdC1wb2x5Z2xvdCc7XG5pbXBvcnQgeyBOYXZMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBJY29uLCBjb21wb25lbnRzLCBjb2xvcnMsIGNvbG9yc1JhdywgbGVuZ3RocyB9IGZyb20gJ25ldGxpZnktY21zLXVpLWRlZmF1bHQnO1xuaW1wb3J0IHsgc2VhcmNoQ29sbGVjdGlvbnMgfSBmcm9tICdBY3Rpb25zL2NvbGxlY3Rpb25zJztcblxuY29uc3Qgc3R5bGVzID0ge1xuICBzaWRlYmFyTmF2TGlua0FjdGl2ZTogY3NzYFxuICAgIGNvbG9yOiAke2NvbG9ycy5hY3RpdmV9O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmFjdGl2ZUJhY2tncm91bmR9O1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjNDg2M2M2O1xuICBgLFxufTtcblxuY29uc3QgU2lkZWJhckNvbnRhaW5lciA9IHN0eWxlZC5hc2lkZWBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICB3aWR0aDogMjUwcHg7XG4gIHBhZGRpbmc6IDhweCAwIDEycHg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDExMnB4KTtcbiAgb3ZlcmZsb3c6IGF1dG87XG5gO1xuXG5jb25zdCBTaWRlYmFySGVhZGluZyA9IHN0eWxlZC5oMmBcbiAgZm9udC1zaXplOiAyM3B4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDE4cHggMTJweCAxMnB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgU2VhcmNoQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwIDEycHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAke0ljb259IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDZweDtcbiAgICB6LWluZGV4OiAyO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIH1cbmA7XG5cbmNvbnN0IFNlYXJjaElucHV0ID0gc3R5bGVkLmlucHV0YFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZmMGY0O1xuICBib3JkZXItcmFkaXVzOiAke2xlbmd0aHMuYm9yZGVyUmFkaXVzfTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBwYWRkaW5nOiAxMHB4IDZweCAxMHB4IDMycHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggJHtjb2xvcnNSYXcuYmx1ZX07XG4gIH1cbmA7XG5cbmNvbnN0IFNpZGViYXJOYXZMaXN0ID0gc3R5bGVkLnVsYFxuICBtYXJnaW46IDE2cHggMCAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xuYDtcblxuY29uc3QgU2lkZWJhck5hdkxpbmsgPSBzdHlsZWQoTmF2TGluaylgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogOHB4IDEycHg7XG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgI2ZmZjtcblxuICAke0ljb259IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgfVxuXG4gICR7cHJvcHMgPT4gY3NzYFxuICAgICY6aG92ZXIsXG4gICAgJjphY3RpdmUsXG4gICAgJi4ke3Byb3BzLmFjdGl2ZUNsYXNzTmFtZX0ge1xuICAgICAgJHtzdHlsZXMuc2lkZWJhck5hdkxpbmtBY3RpdmV9O1xuICAgIH1cbiAgYH07XG5gO1xuXG5jbGFzcyBTaWRlYmFyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBjb2xsZWN0aW9uczogSW1tdXRhYmxlUHJvcFR5cGVzLm9yZGVyZWRNYXAuaXNSZXF1aXJlZCxcbiAgICBzZWFyY2hUZXJtOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIH07XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBzZWFyY2hUZXJtOiAnJyxcbiAgfTtcblxuICBzdGF0ZSA9IHsgcXVlcnk6IHRoaXMucHJvcHMuc2VhcmNoVGVybSB9O1xuXG4gIHJlbmRlckxpbmsgPSBjb2xsZWN0aW9uID0+IHtcbiAgICBjb25zdCBjb2xsZWN0aW9uTmFtZSA9IGNvbGxlY3Rpb24uZ2V0KCduYW1lJyk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxsaSBrZXk9e2NvbGxlY3Rpb25OYW1lfT5cbiAgICAgICAgPFNpZGViYXJOYXZMaW5rIHRvPXtgL2NvbGxlY3Rpb25zLyR7Y29sbGVjdGlvbk5hbWV9YH0gYWN0aXZlQ2xhc3NOYW1lPVwic2lkZWJhci1hY3RpdmVcIj5cbiAgICAgICAgICA8SWNvbiB0eXBlPVwid3JpdGVcIiAvPlxuICAgICAgICAgIHtjb2xsZWN0aW9uLmdldCgnbGFiZWwnKX1cbiAgICAgICAgPC9TaWRlYmFyTmF2TGluaz5cbiAgICAgIDwvbGk+XG4gICAgKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjb2xsZWN0aW9ucywgdCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHF1ZXJ5IH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxTaWRlYmFyQ29udGFpbmVyPlxuICAgICAgICA8U2lkZWJhckhlYWRpbmc+e3QoJ2NvbGxlY3Rpb24uc2lkZWJhci5jb2xsZWN0aW9ucycpfTwvU2lkZWJhckhlYWRpbmc+XG4gICAgICAgIDxTZWFyY2hDb250YWluZXI+XG4gICAgICAgICAgPEljb24gdHlwZT1cInNlYXJjaFwiIHNpemU9XCJzbWFsbFwiIC8+XG4gICAgICAgICAgPFNlYXJjaElucHV0XG4gICAgICAgICAgICBvbkNoYW5nZT17ZSA9PiB0aGlzLnNldFN0YXRlKHsgcXVlcnk6IGUudGFyZ2V0LnZhbHVlIH0pfVxuICAgICAgICAgICAgb25LZXlEb3duPXtlID0+IGUua2V5ID09PSAnRW50ZXInICYmIHNlYXJjaENvbGxlY3Rpb25zKHF1ZXJ5KX1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdjb2xsZWN0aW9uLnNpZGViYXIuc2VhcmNoQWxsJyl9XG4gICAgICAgICAgICB2YWx1ZT17cXVlcnl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9TZWFyY2hDb250YWluZXI+XG4gICAgICAgIDxTaWRlYmFyTmF2TGlzdD57Y29sbGVjdGlvbnMudG9MaXN0KCkubWFwKHRoaXMucmVuZGVyTGluayl9PC9TaWRlYmFyTmF2TGlzdD5cbiAgICAgIDwvU2lkZWJhckNvbnRhaW5lcj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHRyYW5zbGF0ZSgpKFNpZGViYXIpO1xuIl19 */"))
};
const SidebarContainer = (0, _styledBase.default)("aside", {
  target: "el9l68m0",
  label: "SidebarContainer"
})(_netlifyCmsUiDefault.components.card, ";width:250px;padding:8px 0 12px;position:fixed;max-height:calc(100vh - 112px);overflow:auto;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQnFDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEltbXV0YWJsZVByb3BUeXBlcyBmcm9tICdyZWFjdC1pbW11dGFibGUtcHJvcHR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgSWNvbiwgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IHNlYXJjaENvbGxlY3Rpb25zIH0gZnJvbSAnQWN0aW9ucy9jb2xsZWN0aW9ucyc7XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgc2lkZWJhck5hdkxpbmtBY3RpdmU6IGNzc2BcbiAgICBjb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5hY3RpdmVCYWNrZ3JvdW5kfTtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ4NjNjNjtcbiAgYCxcbn07XG5cbmNvbnN0IFNpZGViYXJDb250YWluZXIgPSBzdHlsZWQuYXNpZGVgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgd2lkdGg6IDI1MHB4O1xuICBwYWRkaW5nOiA4cHggMCAxMnB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxMTJweCk7XG4gIG92ZXJmbG93OiBhdXRvO1xuYDtcblxuY29uc3QgU2lkZWJhckhlYWRpbmcgPSBzdHlsZWQuaDJgXG4gIGZvbnQtc2l6ZTogMjNweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAxOHB4IDEycHggMTJweDtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMZWFkfTtcbmA7XG5cbmNvbnN0IFNlYXJjaENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMCAxMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtJY29ufSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA2cHg7XG4gICAgei1pbmRleDogMjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCBTZWFyY2hJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VmZjBmNDtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogMTBweCA2cHggMTBweCAzMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICR7Y29sb3JzUmF3LmJsdWV9O1xuICB9XG5gO1xuXG5jb25zdCBTaWRlYmFyTmF2TGlzdCA9IHN0eWxlZC51bGBcbiAgbWFyZ2luOiAxNnB4IDAgMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbmA7XG5cbmNvbnN0IFNpZGViYXJOYXZMaW5rID0gc3R5bGVkKE5hdkxpbmspYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDhweCAxMnB4O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZmY7XG5cbiAgJHtJY29ufSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIH1cblxuICAke3Byb3BzID0+IGNzc2BcbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlLFxuICAgICYuJHtwcm9wcy5hY3RpdmVDbGFzc05hbWV9IHtcbiAgICAgICR7c3R5bGVzLnNpZGViYXJOYXZMaW5rQWN0aXZlfTtcbiAgICB9XG4gIGB9O1xuYDtcblxuY2xhc3MgU2lkZWJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY29sbGVjdGlvbnM6IEltbXV0YWJsZVByb3BUeXBlcy5vcmRlcmVkTWFwLmlzUmVxdWlyZWQsXG4gICAgc2VhcmNoVGVybTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc2VhcmNoVGVybTogJycsXG4gIH07XG5cbiAgc3RhdGUgPSB7IHF1ZXJ5OiB0aGlzLnByb3BzLnNlYXJjaFRlcm0gfTtcblxuICByZW5kZXJMaW5rID0gY29sbGVjdGlvbiA9PiB7XG4gICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSBjb2xsZWN0aW9uLmdldCgnbmFtZScpO1xuICAgIHJldHVybiAoXG4gICAgICA8bGkga2V5PXtjb2xsZWN0aW9uTmFtZX0+XG4gICAgICAgIDxTaWRlYmFyTmF2TGluayB0bz17YC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25OYW1lfWB9IGFjdGl2ZUNsYXNzTmFtZT1cInNpZGViYXItYWN0aXZlXCI+XG4gICAgICAgICAgPEljb24gdHlwZT1cIndyaXRlXCIgLz5cbiAgICAgICAgICB7Y29sbGVjdGlvbi5nZXQoJ2xhYmVsJyl9XG4gICAgICAgIDwvU2lkZWJhck5hdkxpbms+XG4gICAgICA8L2xpPlxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY29sbGVjdGlvbnMsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBxdWVyeSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8U2lkZWJhckNvbnRhaW5lcj5cbiAgICAgICAgPFNpZGViYXJIZWFkaW5nPnt0KCdjb2xsZWN0aW9uLnNpZGViYXIuY29sbGVjdGlvbnMnKX08L1NpZGViYXJIZWFkaW5nPlxuICAgICAgICA8U2VhcmNoQ29udGFpbmVyPlxuICAgICAgICAgIDxJY29uIHR5cGU9XCJzZWFyY2hcIiBzaXplPVwic21hbGxcIiAvPlxuICAgICAgICAgIDxTZWFyY2hJbnB1dFxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdGhpcy5zZXRTdGF0ZSh7IHF1ZXJ5OiBlLnRhcmdldC52YWx1ZSB9KX1cbiAgICAgICAgICAgIG9uS2V5RG93bj17ZSA9PiBlLmtleSA9PT0gJ0VudGVyJyAmJiBzZWFyY2hDb2xsZWN0aW9ucyhxdWVyeSl9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnY29sbGVjdGlvbi5zaWRlYmFyLnNlYXJjaEFsbCcpfVxuICAgICAgICAgICAgdmFsdWU9e3F1ZXJ5fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvU2VhcmNoQ29udGFpbmVyPlxuICAgICAgICA8U2lkZWJhck5hdkxpc3Q+e2NvbGxlY3Rpb25zLnRvTGlzdCgpLm1hcCh0aGlzLnJlbmRlckxpbmspfTwvU2lkZWJhck5hdkxpc3Q+XG4gICAgICA8L1NpZGViYXJDb250YWluZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShTaWRlYmFyKTtcbiJdfQ== */"));
const SidebarHeading = (0, _styledBase.default)("h2", {
  target: "el9l68m1",
  label: "SidebarHeading"
})("font-size:23px;font-weight:600;padding:0;margin:18px 12px 12px;color:", _netlifyCmsUiDefault.colors.textLead, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQmdDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEltbXV0YWJsZVByb3BUeXBlcyBmcm9tICdyZWFjdC1pbW11dGFibGUtcHJvcHR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgSWNvbiwgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IHNlYXJjaENvbGxlY3Rpb25zIH0gZnJvbSAnQWN0aW9ucy9jb2xsZWN0aW9ucyc7XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgc2lkZWJhck5hdkxpbmtBY3RpdmU6IGNzc2BcbiAgICBjb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5hY3RpdmVCYWNrZ3JvdW5kfTtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ4NjNjNjtcbiAgYCxcbn07XG5cbmNvbnN0IFNpZGViYXJDb250YWluZXIgPSBzdHlsZWQuYXNpZGVgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgd2lkdGg6IDI1MHB4O1xuICBwYWRkaW5nOiA4cHggMCAxMnB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxMTJweCk7XG4gIG92ZXJmbG93OiBhdXRvO1xuYDtcblxuY29uc3QgU2lkZWJhckhlYWRpbmcgPSBzdHlsZWQuaDJgXG4gIGZvbnQtc2l6ZTogMjNweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAxOHB4IDEycHggMTJweDtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMZWFkfTtcbmA7XG5cbmNvbnN0IFNlYXJjaENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMCAxMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtJY29ufSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA2cHg7XG4gICAgei1pbmRleDogMjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCBTZWFyY2hJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VmZjBmNDtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogMTBweCA2cHggMTBweCAzMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICR7Y29sb3JzUmF3LmJsdWV9O1xuICB9XG5gO1xuXG5jb25zdCBTaWRlYmFyTmF2TGlzdCA9IHN0eWxlZC51bGBcbiAgbWFyZ2luOiAxNnB4IDAgMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbmA7XG5cbmNvbnN0IFNpZGViYXJOYXZMaW5rID0gc3R5bGVkKE5hdkxpbmspYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDhweCAxMnB4O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZmY7XG5cbiAgJHtJY29ufSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIH1cblxuICAke3Byb3BzID0+IGNzc2BcbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlLFxuICAgICYuJHtwcm9wcy5hY3RpdmVDbGFzc05hbWV9IHtcbiAgICAgICR7c3R5bGVzLnNpZGViYXJOYXZMaW5rQWN0aXZlfTtcbiAgICB9XG4gIGB9O1xuYDtcblxuY2xhc3MgU2lkZWJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY29sbGVjdGlvbnM6IEltbXV0YWJsZVByb3BUeXBlcy5vcmRlcmVkTWFwLmlzUmVxdWlyZWQsXG4gICAgc2VhcmNoVGVybTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc2VhcmNoVGVybTogJycsXG4gIH07XG5cbiAgc3RhdGUgPSB7IHF1ZXJ5OiB0aGlzLnByb3BzLnNlYXJjaFRlcm0gfTtcblxuICByZW5kZXJMaW5rID0gY29sbGVjdGlvbiA9PiB7XG4gICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSBjb2xsZWN0aW9uLmdldCgnbmFtZScpO1xuICAgIHJldHVybiAoXG4gICAgICA8bGkga2V5PXtjb2xsZWN0aW9uTmFtZX0+XG4gICAgICAgIDxTaWRlYmFyTmF2TGluayB0bz17YC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25OYW1lfWB9IGFjdGl2ZUNsYXNzTmFtZT1cInNpZGViYXItYWN0aXZlXCI+XG4gICAgICAgICAgPEljb24gdHlwZT1cIndyaXRlXCIgLz5cbiAgICAgICAgICB7Y29sbGVjdGlvbi5nZXQoJ2xhYmVsJyl9XG4gICAgICAgIDwvU2lkZWJhck5hdkxpbms+XG4gICAgICA8L2xpPlxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY29sbGVjdGlvbnMsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBxdWVyeSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8U2lkZWJhckNvbnRhaW5lcj5cbiAgICAgICAgPFNpZGViYXJIZWFkaW5nPnt0KCdjb2xsZWN0aW9uLnNpZGViYXIuY29sbGVjdGlvbnMnKX08L1NpZGViYXJIZWFkaW5nPlxuICAgICAgICA8U2VhcmNoQ29udGFpbmVyPlxuICAgICAgICAgIDxJY29uIHR5cGU9XCJzZWFyY2hcIiBzaXplPVwic21hbGxcIiAvPlxuICAgICAgICAgIDxTZWFyY2hJbnB1dFxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdGhpcy5zZXRTdGF0ZSh7IHF1ZXJ5OiBlLnRhcmdldC52YWx1ZSB9KX1cbiAgICAgICAgICAgIG9uS2V5RG93bj17ZSA9PiBlLmtleSA9PT0gJ0VudGVyJyAmJiBzZWFyY2hDb2xsZWN0aW9ucyhxdWVyeSl9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnY29sbGVjdGlvbi5zaWRlYmFyLnNlYXJjaEFsbCcpfVxuICAgICAgICAgICAgdmFsdWU9e3F1ZXJ5fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvU2VhcmNoQ29udGFpbmVyPlxuICAgICAgICA8U2lkZWJhck5hdkxpc3Q+e2NvbGxlY3Rpb25zLnRvTGlzdCgpLm1hcCh0aGlzLnJlbmRlckxpbmspfTwvU2lkZWJhck5hdkxpc3Q+XG4gICAgICA8L1NpZGViYXJDb250YWluZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShTaWRlYmFyKTtcbiJdfQ== */"));
const SearchContainer = (0, _styledBase.default)("div", {
  target: "el9l68m2",
  label: "SearchContainer"
})("display:flex;align-items:center;margin:0 12px;position:relative;", _netlifyCmsUiDefault.Icon, "{position:absolute;top:0;left:6px;z-index:2;height:100%;display:flex;align-items:center;pointer-events:none;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ2tDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEltbXV0YWJsZVByb3BUeXBlcyBmcm9tICdyZWFjdC1pbW11dGFibGUtcHJvcHR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgSWNvbiwgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IHNlYXJjaENvbGxlY3Rpb25zIH0gZnJvbSAnQWN0aW9ucy9jb2xsZWN0aW9ucyc7XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgc2lkZWJhck5hdkxpbmtBY3RpdmU6IGNzc2BcbiAgICBjb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5hY3RpdmVCYWNrZ3JvdW5kfTtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ4NjNjNjtcbiAgYCxcbn07XG5cbmNvbnN0IFNpZGViYXJDb250YWluZXIgPSBzdHlsZWQuYXNpZGVgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgd2lkdGg6IDI1MHB4O1xuICBwYWRkaW5nOiA4cHggMCAxMnB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxMTJweCk7XG4gIG92ZXJmbG93OiBhdXRvO1xuYDtcblxuY29uc3QgU2lkZWJhckhlYWRpbmcgPSBzdHlsZWQuaDJgXG4gIGZvbnQtc2l6ZTogMjNweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAxOHB4IDEycHggMTJweDtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMZWFkfTtcbmA7XG5cbmNvbnN0IFNlYXJjaENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMCAxMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtJY29ufSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA2cHg7XG4gICAgei1pbmRleDogMjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCBTZWFyY2hJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VmZjBmNDtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogMTBweCA2cHggMTBweCAzMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICR7Y29sb3JzUmF3LmJsdWV9O1xuICB9XG5gO1xuXG5jb25zdCBTaWRlYmFyTmF2TGlzdCA9IHN0eWxlZC51bGBcbiAgbWFyZ2luOiAxNnB4IDAgMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbmA7XG5cbmNvbnN0IFNpZGViYXJOYXZMaW5rID0gc3R5bGVkKE5hdkxpbmspYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDhweCAxMnB4O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZmY7XG5cbiAgJHtJY29ufSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIH1cblxuICAke3Byb3BzID0+IGNzc2BcbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlLFxuICAgICYuJHtwcm9wcy5hY3RpdmVDbGFzc05hbWV9IHtcbiAgICAgICR7c3R5bGVzLnNpZGViYXJOYXZMaW5rQWN0aXZlfTtcbiAgICB9XG4gIGB9O1xuYDtcblxuY2xhc3MgU2lkZWJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY29sbGVjdGlvbnM6IEltbXV0YWJsZVByb3BUeXBlcy5vcmRlcmVkTWFwLmlzUmVxdWlyZWQsXG4gICAgc2VhcmNoVGVybTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc2VhcmNoVGVybTogJycsXG4gIH07XG5cbiAgc3RhdGUgPSB7IHF1ZXJ5OiB0aGlzLnByb3BzLnNlYXJjaFRlcm0gfTtcblxuICByZW5kZXJMaW5rID0gY29sbGVjdGlvbiA9PiB7XG4gICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSBjb2xsZWN0aW9uLmdldCgnbmFtZScpO1xuICAgIHJldHVybiAoXG4gICAgICA8bGkga2V5PXtjb2xsZWN0aW9uTmFtZX0+XG4gICAgICAgIDxTaWRlYmFyTmF2TGluayB0bz17YC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25OYW1lfWB9IGFjdGl2ZUNsYXNzTmFtZT1cInNpZGViYXItYWN0aXZlXCI+XG4gICAgICAgICAgPEljb24gdHlwZT1cIndyaXRlXCIgLz5cbiAgICAgICAgICB7Y29sbGVjdGlvbi5nZXQoJ2xhYmVsJyl9XG4gICAgICAgIDwvU2lkZWJhck5hdkxpbms+XG4gICAgICA8L2xpPlxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY29sbGVjdGlvbnMsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBxdWVyeSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8U2lkZWJhckNvbnRhaW5lcj5cbiAgICAgICAgPFNpZGViYXJIZWFkaW5nPnt0KCdjb2xsZWN0aW9uLnNpZGViYXIuY29sbGVjdGlvbnMnKX08L1NpZGViYXJIZWFkaW5nPlxuICAgICAgICA8U2VhcmNoQ29udGFpbmVyPlxuICAgICAgICAgIDxJY29uIHR5cGU9XCJzZWFyY2hcIiBzaXplPVwic21hbGxcIiAvPlxuICAgICAgICAgIDxTZWFyY2hJbnB1dFxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdGhpcy5zZXRTdGF0ZSh7IHF1ZXJ5OiBlLnRhcmdldC52YWx1ZSB9KX1cbiAgICAgICAgICAgIG9uS2V5RG93bj17ZSA9PiBlLmtleSA9PT0gJ0VudGVyJyAmJiBzZWFyY2hDb2xsZWN0aW9ucyhxdWVyeSl9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnY29sbGVjdGlvbi5zaWRlYmFyLnNlYXJjaEFsbCcpfVxuICAgICAgICAgICAgdmFsdWU9e3F1ZXJ5fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvU2VhcmNoQ29udGFpbmVyPlxuICAgICAgICA8U2lkZWJhck5hdkxpc3Q+e2NvbGxlY3Rpb25zLnRvTGlzdCgpLm1hcCh0aGlzLnJlbmRlckxpbmspfTwvU2lkZWJhck5hdkxpc3Q+XG4gICAgICA8L1NpZGViYXJDb250YWluZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShTaWRlYmFyKTtcbiJdfQ== */"));
const SearchInput = (0, _styledBase.default)("input", {
  target: "el9l68m3",
  label: "SearchInput"
})("background-color:#eff0f4;border-radius:", _netlifyCmsUiDefault.lengths.borderRadius, ";font-size:14px;padding:10px 6px 10px 32px;width:100%;position:relative;z-index:1;&:focus{outline:none;box-shadow:inset 0 0 0 2px ", _netlifyCmsUiDefault.colorsRaw.blue, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRGdDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEltbXV0YWJsZVByb3BUeXBlcyBmcm9tICdyZWFjdC1pbW11dGFibGUtcHJvcHR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgSWNvbiwgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IHNlYXJjaENvbGxlY3Rpb25zIH0gZnJvbSAnQWN0aW9ucy9jb2xsZWN0aW9ucyc7XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgc2lkZWJhck5hdkxpbmtBY3RpdmU6IGNzc2BcbiAgICBjb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5hY3RpdmVCYWNrZ3JvdW5kfTtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ4NjNjNjtcbiAgYCxcbn07XG5cbmNvbnN0IFNpZGViYXJDb250YWluZXIgPSBzdHlsZWQuYXNpZGVgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgd2lkdGg6IDI1MHB4O1xuICBwYWRkaW5nOiA4cHggMCAxMnB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxMTJweCk7XG4gIG92ZXJmbG93OiBhdXRvO1xuYDtcblxuY29uc3QgU2lkZWJhckhlYWRpbmcgPSBzdHlsZWQuaDJgXG4gIGZvbnQtc2l6ZTogMjNweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAxOHB4IDEycHggMTJweDtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMZWFkfTtcbmA7XG5cbmNvbnN0IFNlYXJjaENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMCAxMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtJY29ufSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA2cHg7XG4gICAgei1pbmRleDogMjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCBTZWFyY2hJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VmZjBmNDtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogMTBweCA2cHggMTBweCAzMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICR7Y29sb3JzUmF3LmJsdWV9O1xuICB9XG5gO1xuXG5jb25zdCBTaWRlYmFyTmF2TGlzdCA9IHN0eWxlZC51bGBcbiAgbWFyZ2luOiAxNnB4IDAgMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbmA7XG5cbmNvbnN0IFNpZGViYXJOYXZMaW5rID0gc3R5bGVkKE5hdkxpbmspYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDhweCAxMnB4O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZmY7XG5cbiAgJHtJY29ufSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIH1cblxuICAke3Byb3BzID0+IGNzc2BcbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlLFxuICAgICYuJHtwcm9wcy5hY3RpdmVDbGFzc05hbWV9IHtcbiAgICAgICR7c3R5bGVzLnNpZGViYXJOYXZMaW5rQWN0aXZlfTtcbiAgICB9XG4gIGB9O1xuYDtcblxuY2xhc3MgU2lkZWJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY29sbGVjdGlvbnM6IEltbXV0YWJsZVByb3BUeXBlcy5vcmRlcmVkTWFwLmlzUmVxdWlyZWQsXG4gICAgc2VhcmNoVGVybTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc2VhcmNoVGVybTogJycsXG4gIH07XG5cbiAgc3RhdGUgPSB7IHF1ZXJ5OiB0aGlzLnByb3BzLnNlYXJjaFRlcm0gfTtcblxuICByZW5kZXJMaW5rID0gY29sbGVjdGlvbiA9PiB7XG4gICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSBjb2xsZWN0aW9uLmdldCgnbmFtZScpO1xuICAgIHJldHVybiAoXG4gICAgICA8bGkga2V5PXtjb2xsZWN0aW9uTmFtZX0+XG4gICAgICAgIDxTaWRlYmFyTmF2TGluayB0bz17YC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25OYW1lfWB9IGFjdGl2ZUNsYXNzTmFtZT1cInNpZGViYXItYWN0aXZlXCI+XG4gICAgICAgICAgPEljb24gdHlwZT1cIndyaXRlXCIgLz5cbiAgICAgICAgICB7Y29sbGVjdGlvbi5nZXQoJ2xhYmVsJyl9XG4gICAgICAgIDwvU2lkZWJhck5hdkxpbms+XG4gICAgICA8L2xpPlxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY29sbGVjdGlvbnMsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBxdWVyeSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8U2lkZWJhckNvbnRhaW5lcj5cbiAgICAgICAgPFNpZGViYXJIZWFkaW5nPnt0KCdjb2xsZWN0aW9uLnNpZGViYXIuY29sbGVjdGlvbnMnKX08L1NpZGViYXJIZWFkaW5nPlxuICAgICAgICA8U2VhcmNoQ29udGFpbmVyPlxuICAgICAgICAgIDxJY29uIHR5cGU9XCJzZWFyY2hcIiBzaXplPVwic21hbGxcIiAvPlxuICAgICAgICAgIDxTZWFyY2hJbnB1dFxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdGhpcy5zZXRTdGF0ZSh7IHF1ZXJ5OiBlLnRhcmdldC52YWx1ZSB9KX1cbiAgICAgICAgICAgIG9uS2V5RG93bj17ZSA9PiBlLmtleSA9PT0gJ0VudGVyJyAmJiBzZWFyY2hDb2xsZWN0aW9ucyhxdWVyeSl9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnY29sbGVjdGlvbi5zaWRlYmFyLnNlYXJjaEFsbCcpfVxuICAgICAgICAgICAgdmFsdWU9e3F1ZXJ5fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvU2VhcmNoQ29udGFpbmVyPlxuICAgICAgICA8U2lkZWJhck5hdkxpc3Q+e2NvbGxlY3Rpb25zLnRvTGlzdCgpLm1hcCh0aGlzLnJlbmRlckxpbmspfTwvU2lkZWJhck5hdkxpc3Q+XG4gICAgICA8L1NpZGViYXJDb250YWluZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShTaWRlYmFyKTtcbiJdfQ== */"));
const SidebarNavList = (0, _styledBase.default)("ul", {
  target: "el9l68m4",
  label: "SidebarNavList"
})(process.env.NODE_ENV === "production" ? {
  name: "93f2xv",
  styles: "margin:16px 0 0;list-style:none;"
} : {
  name: "93f2xv",
  styles: "margin:16px 0 0;list-style:none;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRWdDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEltbXV0YWJsZVByb3BUeXBlcyBmcm9tICdyZWFjdC1pbW11dGFibGUtcHJvcHR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgSWNvbiwgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IHNlYXJjaENvbGxlY3Rpb25zIH0gZnJvbSAnQWN0aW9ucy9jb2xsZWN0aW9ucyc7XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgc2lkZWJhck5hdkxpbmtBY3RpdmU6IGNzc2BcbiAgICBjb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5hY3RpdmVCYWNrZ3JvdW5kfTtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ4NjNjNjtcbiAgYCxcbn07XG5cbmNvbnN0IFNpZGViYXJDb250YWluZXIgPSBzdHlsZWQuYXNpZGVgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgd2lkdGg6IDI1MHB4O1xuICBwYWRkaW5nOiA4cHggMCAxMnB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxMTJweCk7XG4gIG92ZXJmbG93OiBhdXRvO1xuYDtcblxuY29uc3QgU2lkZWJhckhlYWRpbmcgPSBzdHlsZWQuaDJgXG4gIGZvbnQtc2l6ZTogMjNweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAxOHB4IDEycHggMTJweDtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMZWFkfTtcbmA7XG5cbmNvbnN0IFNlYXJjaENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMCAxMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtJY29ufSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA2cHg7XG4gICAgei1pbmRleDogMjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCBTZWFyY2hJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VmZjBmNDtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogMTBweCA2cHggMTBweCAzMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICR7Y29sb3JzUmF3LmJsdWV9O1xuICB9XG5gO1xuXG5jb25zdCBTaWRlYmFyTmF2TGlzdCA9IHN0eWxlZC51bGBcbiAgbWFyZ2luOiAxNnB4IDAgMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbmA7XG5cbmNvbnN0IFNpZGViYXJOYXZMaW5rID0gc3R5bGVkKE5hdkxpbmspYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDhweCAxMnB4O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZmY7XG5cbiAgJHtJY29ufSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIH1cblxuICAke3Byb3BzID0+IGNzc2BcbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlLFxuICAgICYuJHtwcm9wcy5hY3RpdmVDbGFzc05hbWV9IHtcbiAgICAgICR7c3R5bGVzLnNpZGViYXJOYXZMaW5rQWN0aXZlfTtcbiAgICB9XG4gIGB9O1xuYDtcblxuY2xhc3MgU2lkZWJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY29sbGVjdGlvbnM6IEltbXV0YWJsZVByb3BUeXBlcy5vcmRlcmVkTWFwLmlzUmVxdWlyZWQsXG4gICAgc2VhcmNoVGVybTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc2VhcmNoVGVybTogJycsXG4gIH07XG5cbiAgc3RhdGUgPSB7IHF1ZXJ5OiB0aGlzLnByb3BzLnNlYXJjaFRlcm0gfTtcblxuICByZW5kZXJMaW5rID0gY29sbGVjdGlvbiA9PiB7XG4gICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSBjb2xsZWN0aW9uLmdldCgnbmFtZScpO1xuICAgIHJldHVybiAoXG4gICAgICA8bGkga2V5PXtjb2xsZWN0aW9uTmFtZX0+XG4gICAgICAgIDxTaWRlYmFyTmF2TGluayB0bz17YC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25OYW1lfWB9IGFjdGl2ZUNsYXNzTmFtZT1cInNpZGViYXItYWN0aXZlXCI+XG4gICAgICAgICAgPEljb24gdHlwZT1cIndyaXRlXCIgLz5cbiAgICAgICAgICB7Y29sbGVjdGlvbi5nZXQoJ2xhYmVsJyl9XG4gICAgICAgIDwvU2lkZWJhck5hdkxpbms+XG4gICAgICA8L2xpPlxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY29sbGVjdGlvbnMsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBxdWVyeSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8U2lkZWJhckNvbnRhaW5lcj5cbiAgICAgICAgPFNpZGViYXJIZWFkaW5nPnt0KCdjb2xsZWN0aW9uLnNpZGViYXIuY29sbGVjdGlvbnMnKX08L1NpZGViYXJIZWFkaW5nPlxuICAgICAgICA8U2VhcmNoQ29udGFpbmVyPlxuICAgICAgICAgIDxJY29uIHR5cGU9XCJzZWFyY2hcIiBzaXplPVwic21hbGxcIiAvPlxuICAgICAgICAgIDxTZWFyY2hJbnB1dFxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdGhpcy5zZXRTdGF0ZSh7IHF1ZXJ5OiBlLnRhcmdldC52YWx1ZSB9KX1cbiAgICAgICAgICAgIG9uS2V5RG93bj17ZSA9PiBlLmtleSA9PT0gJ0VudGVyJyAmJiBzZWFyY2hDb2xsZWN0aW9ucyhxdWVyeSl9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnY29sbGVjdGlvbi5zaWRlYmFyLnNlYXJjaEFsbCcpfVxuICAgICAgICAgICAgdmFsdWU9e3F1ZXJ5fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvU2VhcmNoQ29udGFpbmVyPlxuICAgICAgICA8U2lkZWJhck5hdkxpc3Q+e2NvbGxlY3Rpb25zLnRvTGlzdCgpLm1hcCh0aGlzLnJlbmRlckxpbmspfTwvU2lkZWJhck5hdkxpc3Q+XG4gICAgICA8L1NpZGViYXJDb250YWluZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShTaWRlYmFyKTtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
const SidebarNavLink = ( /*#__PURE__*/0, _styledBase.default)(_reactRouterDom.NavLink, {
  target: "el9l68m5",
  label: "SidebarNavLink"
})("display:flex;font-size:14px;font-weight:500;align-items:center;padding:8px 12px;border-left:2px solid #fff;", _netlifyCmsUiDefault.Icon, "{margin-right:8px;}", props => /*#__PURE__*/(0, _core.css)("&:hover,&:active,&.", props.activeClassName, "{", styles.sidebarNavLinkActive, ";};label:SidebarNavLink;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRmdCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEltbXV0YWJsZVByb3BUeXBlcyBmcm9tICdyZWFjdC1pbW11dGFibGUtcHJvcHR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgSWNvbiwgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IHNlYXJjaENvbGxlY3Rpb25zIH0gZnJvbSAnQWN0aW9ucy9jb2xsZWN0aW9ucyc7XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgc2lkZWJhck5hdkxpbmtBY3RpdmU6IGNzc2BcbiAgICBjb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5hY3RpdmVCYWNrZ3JvdW5kfTtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ4NjNjNjtcbiAgYCxcbn07XG5cbmNvbnN0IFNpZGViYXJDb250YWluZXIgPSBzdHlsZWQuYXNpZGVgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgd2lkdGg6IDI1MHB4O1xuICBwYWRkaW5nOiA4cHggMCAxMnB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxMTJweCk7XG4gIG92ZXJmbG93OiBhdXRvO1xuYDtcblxuY29uc3QgU2lkZWJhckhlYWRpbmcgPSBzdHlsZWQuaDJgXG4gIGZvbnQtc2l6ZTogMjNweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAxOHB4IDEycHggMTJweDtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMZWFkfTtcbmA7XG5cbmNvbnN0IFNlYXJjaENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMCAxMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtJY29ufSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA2cHg7XG4gICAgei1pbmRleDogMjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCBTZWFyY2hJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VmZjBmNDtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogMTBweCA2cHggMTBweCAzMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICR7Y29sb3JzUmF3LmJsdWV9O1xuICB9XG5gO1xuXG5jb25zdCBTaWRlYmFyTmF2TGlzdCA9IHN0eWxlZC51bGBcbiAgbWFyZ2luOiAxNnB4IDAgMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbmA7XG5cbmNvbnN0IFNpZGViYXJOYXZMaW5rID0gc3R5bGVkKE5hdkxpbmspYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDhweCAxMnB4O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZmY7XG5cbiAgJHtJY29ufSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIH1cblxuICAke3Byb3BzID0+IGNzc2BcbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlLFxuICAgICYuJHtwcm9wcy5hY3RpdmVDbGFzc05hbWV9IHtcbiAgICAgICR7c3R5bGVzLnNpZGViYXJOYXZMaW5rQWN0aXZlfTtcbiAgICB9XG4gIGB9O1xuYDtcblxuY2xhc3MgU2lkZWJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY29sbGVjdGlvbnM6IEltbXV0YWJsZVByb3BUeXBlcy5vcmRlcmVkTWFwLmlzUmVxdWlyZWQsXG4gICAgc2VhcmNoVGVybTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc2VhcmNoVGVybTogJycsXG4gIH07XG5cbiAgc3RhdGUgPSB7IHF1ZXJ5OiB0aGlzLnByb3BzLnNlYXJjaFRlcm0gfTtcblxuICByZW5kZXJMaW5rID0gY29sbGVjdGlvbiA9PiB7XG4gICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSBjb2xsZWN0aW9uLmdldCgnbmFtZScpO1xuICAgIHJldHVybiAoXG4gICAgICA8bGkga2V5PXtjb2xsZWN0aW9uTmFtZX0+XG4gICAgICAgIDxTaWRlYmFyTmF2TGluayB0bz17YC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25OYW1lfWB9IGFjdGl2ZUNsYXNzTmFtZT1cInNpZGViYXItYWN0aXZlXCI+XG4gICAgICAgICAgPEljb24gdHlwZT1cIndyaXRlXCIgLz5cbiAgICAgICAgICB7Y29sbGVjdGlvbi5nZXQoJ2xhYmVsJyl9XG4gICAgICAgIDwvU2lkZWJhck5hdkxpbms+XG4gICAgICA8L2xpPlxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY29sbGVjdGlvbnMsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBxdWVyeSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8U2lkZWJhckNvbnRhaW5lcj5cbiAgICAgICAgPFNpZGViYXJIZWFkaW5nPnt0KCdjb2xsZWN0aW9uLnNpZGViYXIuY29sbGVjdGlvbnMnKX08L1NpZGViYXJIZWFkaW5nPlxuICAgICAgICA8U2VhcmNoQ29udGFpbmVyPlxuICAgICAgICAgIDxJY29uIHR5cGU9XCJzZWFyY2hcIiBzaXplPVwic21hbGxcIiAvPlxuICAgICAgICAgIDxTZWFyY2hJbnB1dFxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdGhpcy5zZXRTdGF0ZSh7IHF1ZXJ5OiBlLnRhcmdldC52YWx1ZSB9KX1cbiAgICAgICAgICAgIG9uS2V5RG93bj17ZSA9PiBlLmtleSA9PT0gJ0VudGVyJyAmJiBzZWFyY2hDb2xsZWN0aW9ucyhxdWVyeSl9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnY29sbGVjdGlvbi5zaWRlYmFyLnNlYXJjaEFsbCcpfVxuICAgICAgICAgICAgdmFsdWU9e3F1ZXJ5fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvU2VhcmNoQ29udGFpbmVyPlxuICAgICAgICA8U2lkZWJhck5hdkxpc3Q+e2NvbGxlY3Rpb25zLnRvTGlzdCgpLm1hcCh0aGlzLnJlbmRlckxpbmspfTwvU2lkZWJhck5hdkxpc3Q+XG4gICAgICA8L1NpZGViYXJDb250YWluZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShTaWRlYmFyKTtcbiJdfQ== */")), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RXNDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vU2lkZWJhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEltbXV0YWJsZVByb3BUeXBlcyBmcm9tICdyZWFjdC1pbW11dGFibGUtcHJvcHR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgSWNvbiwgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IHNlYXJjaENvbGxlY3Rpb25zIH0gZnJvbSAnQWN0aW9ucy9jb2xsZWN0aW9ucyc7XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgc2lkZWJhck5hdkxpbmtBY3RpdmU6IGNzc2BcbiAgICBjb2xvcjogJHtjb2xvcnMuYWN0aXZlfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5hY3RpdmVCYWNrZ3JvdW5kfTtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ4NjNjNjtcbiAgYCxcbn07XG5cbmNvbnN0IFNpZGViYXJDb250YWluZXIgPSBzdHlsZWQuYXNpZGVgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgd2lkdGg6IDI1MHB4O1xuICBwYWRkaW5nOiA4cHggMCAxMnB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxMTJweCk7XG4gIG92ZXJmbG93OiBhdXRvO1xuYDtcblxuY29uc3QgU2lkZWJhckhlYWRpbmcgPSBzdHlsZWQuaDJgXG4gIGZvbnQtc2l6ZTogMjNweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAxOHB4IDEycHggMTJweDtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMZWFkfTtcbmA7XG5cbmNvbnN0IFNlYXJjaENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMCAxMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtJY29ufSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA2cHg7XG4gICAgei1pbmRleDogMjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCBTZWFyY2hJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VmZjBmNDtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZzogMTBweCA2cHggMTBweCAzMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICR7Y29sb3JzUmF3LmJsdWV9O1xuICB9XG5gO1xuXG5jb25zdCBTaWRlYmFyTmF2TGlzdCA9IHN0eWxlZC51bGBcbiAgbWFyZ2luOiAxNnB4IDAgMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbmA7XG5cbmNvbnN0IFNpZGViYXJOYXZMaW5rID0gc3R5bGVkKE5hdkxpbmspYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDhweCAxMnB4O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZmY7XG5cbiAgJHtJY29ufSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIH1cblxuICAke3Byb3BzID0+IGNzc2BcbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlLFxuICAgICYuJHtwcm9wcy5hY3RpdmVDbGFzc05hbWV9IHtcbiAgICAgICR7c3R5bGVzLnNpZGViYXJOYXZMaW5rQWN0aXZlfTtcbiAgICB9XG4gIGB9O1xuYDtcblxuY2xhc3MgU2lkZWJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY29sbGVjdGlvbnM6IEltbXV0YWJsZVByb3BUeXBlcy5vcmRlcmVkTWFwLmlzUmVxdWlyZWQsXG4gICAgc2VhcmNoVGVybTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc2VhcmNoVGVybTogJycsXG4gIH07XG5cbiAgc3RhdGUgPSB7IHF1ZXJ5OiB0aGlzLnByb3BzLnNlYXJjaFRlcm0gfTtcblxuICByZW5kZXJMaW5rID0gY29sbGVjdGlvbiA9PiB7XG4gICAgY29uc3QgY29sbGVjdGlvbk5hbWUgPSBjb2xsZWN0aW9uLmdldCgnbmFtZScpO1xuICAgIHJldHVybiAoXG4gICAgICA8bGkga2V5PXtjb2xsZWN0aW9uTmFtZX0+XG4gICAgICAgIDxTaWRlYmFyTmF2TGluayB0bz17YC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25OYW1lfWB9IGFjdGl2ZUNsYXNzTmFtZT1cInNpZGViYXItYWN0aXZlXCI+XG4gICAgICAgICAgPEljb24gdHlwZT1cIndyaXRlXCIgLz5cbiAgICAgICAgICB7Y29sbGVjdGlvbi5nZXQoJ2xhYmVsJyl9XG4gICAgICAgIDwvU2lkZWJhck5hdkxpbms+XG4gICAgICA8L2xpPlxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY29sbGVjdGlvbnMsIHQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBxdWVyeSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8U2lkZWJhckNvbnRhaW5lcj5cbiAgICAgICAgPFNpZGViYXJIZWFkaW5nPnt0KCdjb2xsZWN0aW9uLnNpZGViYXIuY29sbGVjdGlvbnMnKX08L1NpZGViYXJIZWFkaW5nPlxuICAgICAgICA8U2VhcmNoQ29udGFpbmVyPlxuICAgICAgICAgIDxJY29uIHR5cGU9XCJzZWFyY2hcIiBzaXplPVwic21hbGxcIiAvPlxuICAgICAgICAgIDxTZWFyY2hJbnB1dFxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdGhpcy5zZXRTdGF0ZSh7IHF1ZXJ5OiBlLnRhcmdldC52YWx1ZSB9KX1cbiAgICAgICAgICAgIG9uS2V5RG93bj17ZSA9PiBlLmtleSA9PT0gJ0VudGVyJyAmJiBzZWFyY2hDb2xsZWN0aW9ucyhxdWVyeSl9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnY29sbGVjdGlvbi5zaWRlYmFyLnNlYXJjaEFsbCcpfVxuICAgICAgICAgICAgdmFsdWU9e3F1ZXJ5fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvU2VhcmNoQ29udGFpbmVyPlxuICAgICAgICA8U2lkZWJhck5hdkxpc3Q+e2NvbGxlY3Rpb25zLnRvTGlzdCgpLm1hcCh0aGlzLnJlbmRlckxpbmspfTwvU2lkZWJhck5hdkxpc3Q+XG4gICAgICA8L1NpZGViYXJDb250YWluZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShTaWRlYmFyKTtcbiJdfQ== */"));

class Sidebar extends _react.default.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      query: this.props.searchTerm
    });

    _defineProperty(this, "renderLink", collection => {
      const collectionName = collection.get('name');
      return (0, _core.jsx)("li", {
        key: collectionName
      }, (0, _core.jsx)(SidebarNavLink, {
        to: "/collections/".concat(collectionName),
        activeClassName: "sidebar-active"
      }, (0, _core.jsx)(_netlifyCmsUiDefault.Icon, {
        type: "write"
      }), collection.get('label')));
    });
  }

  render() {
    const {
      collections,
      t
    } = this.props;
    const {
      query
    } = this.state;
    return (0, _core.jsx)(SidebarContainer, null, (0, _core.jsx)(SidebarHeading, null, t('collection.sidebar.collections')), (0, _core.jsx)(SearchContainer, null, (0, _core.jsx)(_netlifyCmsUiDefault.Icon, {
      type: "search",
      size: "small"
    }), (0, _core.jsx)(SearchInput, {
      onChange: e => this.setState({
        query: e.target.value
      }),
      onKeyDown: e => e.key === 'Enter' && (0, _collections.searchCollections)(query),
      placeholder: t('collection.sidebar.searchAll'),
      value: query
    })), (0, _core.jsx)(SidebarNavList, null, collections.toList().map(this.renderLink)));
  }

}

_defineProperty(Sidebar, "propTypes", {
  collections: _reactImmutableProptypes.default.orderedMap.isRequired,
  searchTerm: _propTypes.default.string,
  t: _propTypes.default.func.isRequired
});

_defineProperty(Sidebar, "defaultProps", {
  searchTerm: ''
});

var _default = (0, _reactPolyglot.translate)()(Sidebar);

exports.default = _default;